openapi: 3.0.0
info:
  title: "Dental Appointment Scheduling System"
  version: "1.0"
  description: "API for managing dental appointments, including scheduling, cancellation, availability checking, and dentist absence management."
  contact:
    name: "Hideyuki Takahashi"
    url: "https://github.com/Dev-HideyukiTakahashi/dental-care"
    email: "dev.hideyukitakahashi@gmail.com"
  license:
    name: "MIT License"
    url: "https://opensource.org/licenses/MIT"

  # ---------------------------------------------------------------------------------------------------
  # ENDPOINTS -----------------------------------------------------------------------------------------
  # ---------------------------------------------------------------------------------------------------

paths:

  # ---------------------------------------------------------------------------------------------------
  # USER ENDPOINTS ------------------------------------------------------------------------------------
  # ---------------------------------------------------------------------------------------------------

  /api/v1/users/me:
    get:
      summary: "Get logged-in patient"
      description: "Retrieves the currently authenticated patient based on the ID in the context."
      operationId: "getLoggedUser"
      tags:
        - "User"
      security:
        - OAuth2: [ ]
      responses:
        '200':
          description: "Patient retrieved successfully"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDTO'
        '400':
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'

  # ---------------------------------------------------------------------------------------------------
  # SCHEDULE ENDPOINTS --------------------------------------------------------------------------------
  # ---------------------------------------------------------------------------------------------------

  /api/v1/schedules/absences/dentist/{id}:
    post:
      summary: Schedule a dentist absence
      description: Create a new absence schedule for the dentist, marking a period when they will be unavailable to attend appointments.
      tags:
        - Schedule
      operationId: createDentistAbsence
      parameters:
        - name: id
          in: path
          description: ID of the dentist
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbsenceRequestDTO'
      responses:
        '201':
          description: Absence successfully created in Schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbsenceDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: Dentist not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '409':
          description: Schedule data conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
      security:
      - bearerAuth: []

  /api/v1/schedules/{id}:
    delete:
      summary: Remove a dentist absence
      description: Cancel a previously scheduled absence for the dentist.
      tags:
        - Schedule
      operationId: removeDentistAbsence
      parameters:
        - name: id
          in: path
          description: ID of the dentist's absence
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Schedule successfully deleted
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: Schedule not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '409':
          description: Schedule data conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
      security:
      - bearerAuth: []

  # ---------------------------------------------------------------------------------------------------
  # RATING ENDPOINTS ----------------------------------------------------------------------------------
  # ---------------------------------------------------------------------------------------------------

  /api/v1/ratings:
    post:
      summary: Rate a dentist
      description: Submit a rating for a dentist, providing feedback based on the service received.
      tags:
        - Rating
      operationId: rateDentist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingDTO'
      responses:
        '201':
          description: Rating successfully added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: Dentist not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '422':
          description: Appointment has already been rated or not completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
      security:
        - bearerAuth: []

  # ---------------------------------------------------------------------------------------------------
  # PATIENT ENDPOINTS ---------------------------------------------------------------------------------
  # ---------------------------------------------------------------------------------------------------

  /api/v1/patients/{id}:
    get:
      summary: Find patient by ID
      description: Find a patient by their unique ID.
      operationId: findPatientById
      tags:
        - Patient
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the patient
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Patient found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: Patient not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'

    put:
      summary: Update an existing patient
      description: Update an existing patient by their ID.
      operationId: updatePatient
      tags:
        - Patient
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the patient to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientDTO'
      responses:
        '200':
          description: Patient updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: Patient not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'

    delete:
      summary: Delete a patient by ID
      description: Delete a patient by their unique ID.
      operationId: deletePatientById
      tags:
        - Patient
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the patient to delete
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Patient deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: Patient not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'

  /api/v1/patients:
    get:
      summary: Find all patients
      description: Retrieve all patients in a paginated format.
      operationId: findAllPatients
      tags:
        - Patient
      parameters:
        - name: page
          in: query
          required: false
          description: Page number
          schema:
            type: integer
            example: 0
        - name: size
          in: query
          required: false
          description: Page size
          schema:
            type: integer
            example: 10
        - name: sort
          in: query
          required: false
          description: Sorting criteria
          schema:
            type: string
            example: "id,asc"
      responses:
        '200':
          description: Patients found
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/PatientMinDTO'
                  totalElements:
                    type: integer
                  totalPages:
                    type: integer
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'

    post:
      summary: Create a new patient
      description: Create a new patient with the provided details.
      operationId: createPatient
      tags:
        - Patient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientDTO'
      responses:
        '201':
          description: Patient created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'

  # ---------------------------------------------------------------------------------------------------
  # DENTIST ENDPOINTS ---------------------------------------------------------------------------------
  # ---------------------------------------------------------------------------------------------------

  /api/v1/dentists/{id}:
    get:
      summary: Find dentist by ID
      description: Find a dentist by their unique ID.
      operationId: findDentistById
      tags:
        - Dentist
      parameters:
        - name: id
          in: path
          required: true
          description: The unique ID of the dentist to retrieve
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Dentist found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DentistDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: Dentist not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
    put:
      summary: Update an existing dentist
      description: Update an existing dentist by their ID.
      operationId: updateDentist
      tags:
        - Dentist
      parameters:
        - name: id
          in: path
          required: true
          description: The unique ID of the dentist to update
          schema:
            type: integer
            example: 1
      requestBody:
        description: Dentist details to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DentistDTO'
      responses:
        '200':
          description: Dentist updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DentistDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: Dentist not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
    delete:
      summary: Delete a dentist by ID
      description: Delete a dentist by their unique ID.
      operationId: deleteDentistById
      tags:
        - Dentist
      parameters:
        - name: id
          in: path
          required: true
          description: The unique ID of the dentist to delete
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Dentist deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '404':
          description: Dentist not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'

  /api/v1/dentists:
    get:
      summary: Find all dentists
      description: Retrieve all dentists in a paginated format.
      operationId: findAllDentists
      tags:
        - Dentist
      parameters:
        - name: page
          in: query
          required: false
          description: Page number
          schema:
            type: integer
            default: 0
            example: 0
        - name: size
          in: query
          required: false
          description: Page size
          schema:
            type: integer
            default: 10
            example: 10
        - name: sort
          in: query
          required: false
          description: Sorting criteria
          schema:
            type: string
            default: "id,asc"
            example: "id,asc"
      responses:
        '200':
          description: Dentists found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DentistMinDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
    post:
      summary: Create a new dentist
      description: Create a new dentist with the provided details.
      operationId: createDentist
      tags:
        - Dentist
      requestBody:
        description: Dentist details to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DentistDTO'
      responses:
        '201':
          description: Dentist created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DentistDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomError'

  # ---------------------------------------------------------------------------------------------------
  # AUTH ENDPOINTS ------------------------------------------------------------------------------------
  # ---------------------------------------------------------------------------------------------------

  /auth/signup:
    post:
      tags:
        - "Auth"
      summary: "Register a new patient"
      description: "This endpoint registers a new patient in the system."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatientDTO"
      responses:
        "201":
          description: "Patient created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PatientDTO"
        "400":
          description: "Bad Request"
        "500":
          description: "Internal Server Error"

  /auth/recover-token:
    post:
      tags:
        - "Auth"
      summary: "Create a password recovery token"
      description: "Generates a token for password recovery based on the provided email."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailDTO"
      responses:
        "204":
          description: "No content"
        "400":
          description: "Bad Request"
        "500":
          description: "Internal Server Error"

  # ---------------------------------------------------------------------------------------------------
  # APPOINTMENT ENDPOINTS -----------------------------------------------------------------------------
  # ---------------------------------------------------------------------------------------------------

  /api/v1/appointments:
    post:
      tags:
        - "Appointment"
      summary: "Create a new appointment"
      description: "Create a new appointment and add it to the dentist's schedule."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AppointmentDTO"
      responses:
        "201":
          description: "Appointment created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentDTO"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomError"
        "401":
          description: "Unauthorized"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomError"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomError"
        "404":
          description: "Dentist or Patient not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomError"
        "409":
          description: "Schedule data conflict"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomError"
        "500":
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomError"

  /api/v1/appointments/{id}:
      get:
        tags:
          - "Appointment"
        summary: "Find appointment by ID"
        description: "Find an appointment by their unique ID."
        parameters:
          - name: "id"
            in: "path"
            required: true
            schema:
              type: "integer"
        responses:
          "200":
            description: "Appointment found"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/AppointmentDTO"
          "400":
            description: "Bad Request"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "401":
            description: "Unauthorized"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "403":
            description: "Forbidden"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "404":
            description: "Appointment not found"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "409":
            description: "Schedule data conflict"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "500":
            description: "Internal Server Error"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"

  /api/v1/appointments/{id}/cancel:
    put:
        tags:
          - "Appointment"
        summary: "Cancel an appointment"
        description: "Cancel an existing appointment and remove it from the dentist's schedule."
        parameters:
          - name: "id"
            in: "path"
            required: true
            schema:
              type: "integer"
        responses:
          "200":
            description: "Appointment successfully canceled"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/AppointmentDTO"
          "400":
            description: "Bad Request"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "401":
            description: "Unauthorized"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "403":
            description: "Forbidden"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "404":
            description: "Dentist or Patient not found"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "409":
            description: "Appointment cannot be canceled due to a conflict"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "500":
            description: "Internal Server Error"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"

  /api/v1/appointments/{id}/complete:
      put:
        tags:
          - "Appointment"
        summary: "Complete an appointment"
        description: "Mark an existing appointment as completed."
        parameters:
          - name: "id"
            in: "path"
            required: true
            schema:
              type: "integer"
        responses:
          "200":
            description: "Appointment successfully completed"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/AppointmentDTO"
          "400":
            description: "Bad Request"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "401":
            description: "Unauthorized"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "403":
            description: "Forbidden"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "404":
            description: "Appointment not found"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "409":
            description: "Appointment cannot be completed due to a conflict"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "500":
            description: "Internal Server Error"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"

  /api/v1/appointments/{id}/:
      put:
        tags:
          - "Appointment"
        summary: "Update an appointment"
        description: "Update the date/time of an existing appointment in the dentist's schedule."
        parameters:
          - name: "id"
            in: "path"
            required: true
            schema:
              type: "integer"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AppointmentDTO"
        responses:
          "200":
            description: "Appointment successfully updated"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/AppointmentDTO"
          "400":
            description: "Bad Request"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "401":
            description: "Unauthorized"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "403":
            description: "Forbidden"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "404":
            description: "Dentist or Patient not found"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "409":
            description: "Appointment cannot be updated due to a conflict"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"
          "500":
            description: "Internal Server Error"
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/CustomError"

  # ---------------------------------------------------------------------------------------------------
  # COMPONENTS ----------------------------------------------------------------------------------------
  # ---------------------------------------------------------------------------------------------------

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        password:
          tokenUrl: "/oauth2/token"

  schemas:
    CustomError:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: "Timestamp when the error occurred"
          example: "2025-03-26T06:35:17.622Z"
        status:
          type: integer
          description: "HTTP status code"
          example: 400
        error:
          type: string
          description: "Error message"
          example: "Http status error"
        message:
          type: string
          description: "Detailed error message"
          example: "Error message example"
        path:
          type: string
          description: "The path of the API that caused the error"
          example: "/api/v1/resource/"

    PatientDTO:
      type: object
      properties:
        id:
          type: integer
          description: "ID of the patient"
          example: 2
          readOnly: true
        medicalHistory:
          type: string
          description: "Patient's medical history"
          example: "Root canal treatment"
        name:
          type: string
          description: "Name of the patient"
          example: "John Doe"
        email:
          type: string
          description: "Email of the patient"
          example: "john.doe@example.com"
        password:
          type: string
          description: "Password of the patient"
          example: "#Password123"
        phone:
          type: string
          description: "Phone number of the patient"
          example: "(11) 99710-2376"
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleDTO'
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentMinDTO'

    AppointmentMinDTO:
      type: object
      properties:
        id:
          type: integer
          description: "ID of the appointment"
          example: 2
        date:
          type: string
          format: date-time
          description: "Date and time of the appointment"
          example: "2025-12-20T09:00:00"
        status:
          type: string
          description: "Status of the appointment"
          enum:
            - "SCHEDULED"
            - "COMPLETED"
            - "CANCELED"
          example: "SCHEDULED"
        description:
          type: string
          description: "Description of the appointment"
          example: "Root canal treatment"
        dentist:
          type: string
          description: "Name of the dentist assigned to the appointment"
          example: "Dr. John Smith"

    RoleDTO:
      type: object
      properties:
        id:
          type: integer
          description: "Role ID"
          example: 2
        authority:
          type: string
          description: "Role authority"
          example: "ROLE_PATIENT"
      required:
        - id
        - authority

    RatingDTO:
      type: object
      properties:
        id:
          type: integer
          description: "Unique identifier of the rating"
          example: 1
          readOnly: true
        score:
          type: integer
          description: "Score given to the dentist, ranging from 0 to 10"
          example: 8
        comment:
          type: string
          description: "Comment left by the patient about the service"
          example: "Great service, highly recommend!"
        date:
          type: string
          format: date-time
          description: "Date and time when the rating was recorded"
          example: "2025-12-27T15:30:00"
        isRated:
          type: boolean
          description: "Indicates if the appointment has already been rated"
          example: false
        patientId:
          type: integer
          description: "Identifier of the patient who made the rating"
          example: 2
        dentistId:
          type: integer
          description: "Identifier of the dentist being rated"
          example: 4
        appointmentId:
          type: integer
          description: "Identifier of the appointment associated with the rating"
          example: 11
      required:
        - id
        - score
        - date
        - isRated
        - patientId
        - dentistId
        - appointmentId

    PatientMinDTO:
      type: object
      properties:
        id:
          type: integer
          description: "ID do paciente"
          example: 2
        medicalHistory:
          type: string
          description: "Histórico médico do paciente"
          example: "Sem alergias conhecidas, cirurgias anteriores: apendicectomia"
        name:
          type: string
          description: "Nome do paciente"
          example: "Jane Smith"
        phone:
          type: string
          description: "Número de telefone do paciente"
          example: "(11) 95555-6789"

    DentistMinDTO:
      type: object
      properties:
        id:
          type: integer
          description: "ID do dentista"
          example: 4
        speciality:
          type: string
          description: "Especialidade do dentista"
          example: "Ortodontia"
        name:
          type: string
          description: "Nome do dentista"
          example: "Dr. John Doe"
        registrationNumber:
          type: string
          description: "Número de registro do dentista"
          example: "DR12345"
        score:
          type: integer
          description: "Pontuação do dentista"
          example: 8

    AppointmentDTO:
      type: object
      properties:
        id:
          type: integer
          description: "ID da consulta"
          example: 2
        date:
          type: string
          format: date-time
          description: "Data da consulta"
          example: "2025-12-21T06:00:00"
        status:
          type: string
          description: "Status da consulta"
          example: "SCHEDULED"
        description:
          type: string
          description: "Descrição da consulta"
          example: "Check-up de rotina com limpeza"
        dentist:
          $ref: "#/components/schemas/DentistMinDTO"
        patient:
          $ref: "#/components/schemas/PatientMinDTO"

    AbsenceRequestDTO:
      type: object
      properties:
        absenceStart:
          type: string
          format: date-time
          description: "Data e hora de início da ausência do dentista"
          example: "2025-12-14T10:00:00"
        absenceEnd:
          type: string
          format: date-time
          description: "Data e hora de término da ausência do dentista"
          example: "2025-12-14T12:00:00"

    AbsenceDTO:
      type: object
      properties:
        id:
          type: integer
          description: "ID da ausência"
          example: 2
        dentist:
          $ref: "#/components/schemas/DentistMinDTO"
        absenceStart:
          type: string
          format: date-time
          description: "Data e hora de início da ausência"
          example: "2025-12-14T10:00:00"
        absenceEnd:
          type: string
          format: date-time
          description: "Data e hora de término da ausência"
          example: "2025-12-14T12:00:00"

    EmailDTO:
      type: object
      properties:
        email:
          type: string
          example: "john.doe@example.com"
          description: "Email of the dentist"
      required:
        - email

    RatingMinDTO:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: "ID of the rating"
        score:
          type: integer
          example: 4
          description: "Score of the rating"
        appointmentId:
          type: integer
          example: 2
          description: "ID of the related appointment"
      required:
        - id
        - score
        - appointmentId

    DentistDTO:
      type: object
      properties:
        id:
          type: integer
          example: 2
          description: "ID of the dentist"
        speciality:
          type: string
          example: "Orthodontics"
          description: "Dentist's speciality"
        registrationNumber:
          type: string
          example: "DR12345"
          description: "Registration number of the dentist"
        score:
          type: integer
          example: 8
          description: "Score average of dentist rating"
        name:
          type: string
          example: "John Doe"
          description: "Name of the dentist"
        email:
          type: string
          example: "john.doe@example.com"
          description: "Email of the dentist"
        password:
          type: string
          example: "#Password123"
          description: "Password of the dentist"
        phone:
          type: string
          example: "(11) 99710-2376"
          description: "Phone number of the dentist"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleDTO"
          description: "Roles assigned to the dentist"
        ratings:
          type: array
          items:
            $ref: "#/components/schemas/RatingDTO"
          description: "Ratings assigned to the dentist"
        schedules:
          type: array
          items:
            $ref: "#/components/schemas/ScheduleDTO"
          description: "Schedules assigned to the dentist"
      required:
        - id
        - speciality
        - registrationNumber
        - name
        - email
        - password
        - phone

    ScheduleDTO:
      type: object
      properties:
        id:
          type: integer
          example: 2
          description: "ID of the schedule"
        unavailableTimeSlot:
          type: string
          format: date-time
          example: "null"
          description: "Time slots that are unavailable for scheduling"
        absenceStart:
          type: string
          format: date-time
          example: "2025-12-20T09:00:00"
          description: "Start date and time of the dentist's absence period."
        absenceEnd:
          type: string
          format: date-time
          example: "2025-12-20T12:00:00"
          description: "End date and time of the dentist's absence period."
      required:
        - id
        - unavailableTimeSlot
        - absenceStart
        - absenceEnd

security:
  - OAuth2:
      - read
      - write
